#ifndef _HAP_H_
#define _HAP_H_

#ifdef __cplusplus
extern "C" {
#endif

enum hap_pairing_method {
    HAP_PAIRING_METHOD_SETUP = 1,
    HAP_PAIRING_METHOD_VERIFY,
    HAP_PAIRING_METHOD_ADD,
    HAP_PAIRING_METHOD_REMOVE,
    HAP_PAIRING_METHOD_LIST,
};

enum hap_tlv_type {
    HAP_TLV_TYPE_METHOD,
    HAP_TLV_TYPE_IDENTIFIER,
    HAP_TLV_TYPE_SALT,
    HAP_TLV_TYPE_PUBLICKEY,
    HAP_TLV_TYPE_PROOF,
    HAP_TLV_TYPE_ENCRYPTED_DATA,
    HAP_TLV_TYPE_STATE,
    HAP_TLV_TYPE_ERROR,
    HAP_TLV_TYPE_RETRY_DELAY,
    HAP_TLV_TYPE_CERTIFICATE,
    HAP_TLV_TYPE_SIGNATURE,
    HAP_TLV_TYPE_PERMISSION,
    HAP_TLV_TYPE_FRAGMENT_DATA,
    HAP_TLV_TYPE_FRAGMENT_LAST,
    HAP_TLV_TYPE_SEPARATOR = 0xff,
};

enum hap_tlv_error_codes {
    HAP_TLV_ERROR_UNKNOWN = 1,
    HAP_TLV_ERROR_AUTHENTICATION,
    HAP_TLV_ERROR_BACKOFF,
    HAP_TLV_ERROR_MAX_PEERS,
    HAP_TLV_ERROR_MAX_TRIES,
    HAP_TLV_ERROR_UNAVAILABLE,
    HAP_TLV_ERROR_BUSY,
};

enum hap_accessory_category {
    HAP_ACCESSORY_CATEGORY_OTHER = 1,
    HAP_ACCESSORY_CATEGORY_BRIDGE,
    HAP_ACCESSORY_CATEGORY_FAN,
    HAP_ACCESSORY_CATEGORY_GARAGE,
    HAP_ACCESSORY_CATEGORY_LIGHTBULB,
    HAP_ACCESSORY_CATEGORY_DOOR_LOCK,
    HAP_ACCESSORY_CATEGORY_OUTLET,
    HAP_ACCESSORY_CATEGORY_SWITCH,
    HAP_ACCESSORY_CATEGORY_THERMOSTAT,
    HAP_ACCESSORY_CATEGORY_SENSOR,
    HAP_ACCESSORY_CATEGORY_SECURITY_SYSTEM,
    HAP_ACCESSORY_CATEGORY_DOOR,
    HAP_ACCESSORY_CATEGORY_WINDOW,
    HAP_ACCESSORY_CATEGORY_WINDOW_COVERING,
    HAP_ACCESSORY_CATEGORY_PROGRAMMABLE_SWITCH,
    HAP_ACCESSORY_CATEGORY_RANGE_EXTENDER,
    HAP_ACCESSORY_CATEGORY_IP_CAMERA,
    HAP_ACCESSORY_CATEGORY_VIDEO_DOOR_BEEL,
    HAP_ACCESSORY_CATEGORY_AIR_PURIFIER,
};

#ifdef __cplusplus
}
#endif

#endif //#ifndef _HAP_H_
